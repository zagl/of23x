// -*- C++ -*-
// File generated by PyFoam - sorry for the ugliness

FoamFile
{
 version 2.0;
 format ascii; 	
 class dictionary; 	
 object changeDictionaryDict; 	
}

dictionaryReplacement
{
  U
  {
    internalField uniform (0 0 0);
    boundaryField
    {	
    } 	
  }
  T
  {
    internalField uniform 353.15;
    boundaryField
    {	
    } 	
  } 	
  epsilon
  {
    internalField uniform 0.01;
    boundaryField
    {
      ".*"
      {
        type compressible::epsilonWallFunction;
        value uniform 0.01; 	
      }
    } 	
  } 	
  k
  {
    internalField uniform 0.1;
    boundaryField
    {
      ".*"
      {
        type compressible::kqRWallFunction;
        value uniform 0.1; 	
      }
    } 	
  } 	
  p_rgh
  {
    internalField uniform 100000.0;
    boundaryField
    {
    } 	
  } 	
  p
  {
    internalField uniform 100000.0;
    boundaryField
    {
      ".*"
      {
        type calculated;
        value uniform 100000.0; 	
      }
    } 	
  } 	
  G
  {
    internalField uniform 0;
    boundaryField
    {
      "\w[^L].*"
      {
        type MarshakRadiation;
        T T; 	
        emissivityMode lookup; 	
        emissivity uniform 1.0; 	
        value uniform 0; 	
      }
      "F.*"
      {
        type MarshakRadiation;
        T T;
        emissivityMode solidRadiation;
        value uniform 0;		
      } 	
    } 	
  } 	
  IDefault
  {
    internalField uniform 0;
    boundaryField
    {
      "\w[^L].*"
      {
        type greyDiffusiveRadiation;
        T T; 	
        emissivityMode lookup; 	
        emissivity uniform 1.0; 	
        value uniform 0; 	
      }
      "F.*"
      {
        type greyDiffusiveRadiation;
        T T;
        emissivityMode solidRadiation;
        value uniform 0;	
      } 	
    } 	
  } 	
}

